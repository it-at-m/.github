name: Maven Release

inputs:
  java-version:
    required: false
    default: 21
    type: string
    description: configure the java version
  app-path:
    required: true
    type: string
    description: path where the pom.xml is
  releaseVersion:
    required: true
    type: string
    description: version which will be released
  developmentVersion:
    required: true
    type: string
    description: next version with snapshot
  skipDeployment:
     default: true
     type: boolean
     description: skip deployment to maven central 
  SIGN_KEY_PASS:
     required: true
     type: string
     description: env variable for GPG private key passphrase
  CENTRAL_USERNAME:
     required: true
     type: string
     description: env variable for username in deploy
  CENTRAL_PASSWORD:
     required: true
     type: string
     description: env variable for token in deploy
  GDP_PRIVATE_KEY:
    required: true
    type: string
    description: Value of the GPG private key to import
    
outputs:
  MVN_ARTIFACT_ID:
    description: "artifact name from pom"
    value: ${{ steps.maven-release-step.outputs.MVN_ARTIFACT_ID }}
  artifact-name: 
     description: "name of the artifact upload"
     value: ${{steps.artifact-name.outputs.artifact-name}}    

runs:
  using: "composite"
  steps:
    # Checkout source code, set up Java, etc. Then...
    - name: Checkout code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - name: Set up JDK
      uses: actions/setup-java@7a6d8a8234af8eb26422e24e3006232cccaa061b # v4.6.0
      with:
        java-version: ${{ inputs.java-version }}
        distribution: "temurin"
        cache: "maven"
        cache-dependency-path: ".${{ inputs.app-path}}/pom.xml"
        server-id: "central"
        server-username: ${{ inputs.CENTRAL_USERNAME }}
        server-password: ${{ inputs.CENTRAL_PASSWORD }}
        gpg-private-key: ${{ inputs.GDP_PRIVATE_KEY }}
        gpg-passphrase: ${{ inputs.SIGN_KEY_PASS }}
    - name: Maven Release Step
      id: maven-release-step
      shell: bash
      run: |
        git config --global user.email "github-actions@github.com"
        git config --global user.name "GitHub Actions"
        MVN_ARTIFACT_ID=$(mvn -f .${{inputs.app-path}}/pom.xml org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.artifactId -q -DforceStdout)
        echo $MVN_ARTIFACT_ID
        echo "MVN_ARTIFACT_ID=$MVN_ARTIFACT_ID" >> $GITHUB_OUTPUT
        mvn release:prepare release:perform -f .${{inputs.app-path}}/pom.xml -B -DreleaseVersion=${{ inputs.releaseVersion }} -DdevelopmentVersion=${{ inputs.developmentVersion }} -Darguments="-Dmaven.deploy.skip=${{ inputs.skipDeployment }}"
      env:
          SIGN_KEY_PASS: ${{ inputs.GDP_PRIVATE_KEY }}
          CENTRAL_USERNAME: ${{ inputs.CENTRAL_USERNAME }}
          CENTRAL_PASSWORD: ${{ inputs.CENTRAL_PASSWORD }}

    - id: artifact-name
      run: echo "artifact-name=${{hashFiles(format('./{0}/pom.xml', inputs.app-path))}}" >> "$GITHUB_OUTPUT"
      shell: bash        
    - name: "Upload Artifact"
      uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
      with:
        name: ${{steps.artifact-name.outputs.artifact-name}}
        path: "**/target"
        retention-days: 5
